/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_FSM_WATER_TANKS_H
#define _MOCK_FSM_WATER_TANKS_H

#include "unity.h"
#include "FSM_water_tanks.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

#ifdef __cplusplus
extern "C" {
#endif

void mock_FSM_water_tanks_Init(void);
void mock_FSM_water_tanks_Destroy(void);
void mock_FSM_water_tanks_Verify(void);




#define FSM_Init_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("FSM_Init requires _Ignore (not AndReturn)");
#define FSM_Init_Ignore() FSM_Init_CMockIgnore()
void FSM_Init_CMockIgnore(void);
#define FSM_Init_StopIgnore() FSM_Init_CMockStopIgnore()
void FSM_Init_CMockStopIgnore(void);
#define FSM_Init_ExpectAndReturn(fsm, cmock_retval) TEST_FAIL_MESSAGE("FSM_Init requires _Expect (not AndReturn)");
#define FSM_Init_Expect(fsm) FSM_Init_CMockExpect(__LINE__, fsm)
void FSM_Init_CMockExpect(UNITY_LINE_TYPE cmock_line, FSM_t* fsm);
typedef void (* CMOCK_FSM_Init_CALLBACK)(FSM_t* fsm, int cmock_num_calls);
void FSM_Init_AddCallback(CMOCK_FSM_Init_CALLBACK Callback);
void FSM_Init_Stub(CMOCK_FSM_Init_CALLBACK Callback);
#define FSM_Init_StubWithCallback FSM_Init_Stub
#define FSM_Reset_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("FSM_Reset requires _Ignore (not AndReturn)");
#define FSM_Reset_Ignore() FSM_Reset_CMockIgnore()
void FSM_Reset_CMockIgnore(void);
#define FSM_Reset_StopIgnore() FSM_Reset_CMockStopIgnore()
void FSM_Reset_CMockStopIgnore(void);
#define FSM_Reset_ExpectAndReturn(fsm, cmock_retval) TEST_FAIL_MESSAGE("FSM_Reset requires _Expect (not AndReturn)");
#define FSM_Reset_Expect(fsm) FSM_Reset_CMockExpect(__LINE__, fsm)
void FSM_Reset_CMockExpect(UNITY_LINE_TYPE cmock_line, FSM_t* fsm);
typedef void (* CMOCK_FSM_Reset_CALLBACK)(FSM_t* fsm, int cmock_num_calls);
void FSM_Reset_AddCallback(CMOCK_FSM_Reset_CALLBACK Callback);
void FSM_Reset_Stub(CMOCK_FSM_Reset_CALLBACK Callback);
#define FSM_Reset_StubWithCallback FSM_Reset_Stub
#define FSM_Update_IgnoreAndReturn(cmock_retval) TEST_FAIL_MESSAGE("FSM_Update requires _Ignore (not AndReturn)");
#define FSM_Update_Ignore() FSM_Update_CMockIgnore()
void FSM_Update_CMockIgnore(void);
#define FSM_Update_StopIgnore() FSM_Update_CMockStopIgnore()
void FSM_Update_CMockStopIgnore(void);
#define FSM_Update_ExpectAndReturn(fsm, cmock_retval) TEST_FAIL_MESSAGE("FSM_Update requires _Expect (not AndReturn)");
#define FSM_Update_Expect(fsm) FSM_Update_CMockExpect(__LINE__, fsm)
void FSM_Update_CMockExpect(UNITY_LINE_TYPE cmock_line, FSM_t* fsm);
typedef void (* CMOCK_FSM_Update_CALLBACK)(FSM_t* fsm, int cmock_num_calls);
void FSM_Update_AddCallback(CMOCK_FSM_Update_CALLBACK Callback);
void FSM_Update_Stub(CMOCK_FSM_Update_CALLBACK Callback);
#define FSM_Update_StubWithCallback FSM_Update_Stub
#define FSM_GetState_Ignore() TEST_FAIL_MESSAGE("FSM_GetState requires _IgnoreAndReturn");
#define FSM_GetState_IgnoreAndReturn(cmock_retval) FSM_GetState_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void FSM_GetState_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, FSM_State_t cmock_to_return);
#define FSM_GetState_StopIgnore() FSM_GetState_CMockStopIgnore()
void FSM_GetState_CMockStopIgnore(void);
#define FSM_GetState_Expect(fsm) TEST_FAIL_MESSAGE("FSM_GetState requires _ExpectAndReturn");
#define FSM_GetState_ExpectAndReturn(fsm, cmock_retval) FSM_GetState_CMockExpectAndReturn(__LINE__, fsm, cmock_retval)
void FSM_GetState_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, FSM_t* fsm, FSM_State_t cmock_to_return);
typedef FSM_State_t (* CMOCK_FSM_GetState_CALLBACK)(FSM_t* fsm, int cmock_num_calls);
void FSM_GetState_AddCallback(CMOCK_FSM_GetState_CALLBACK Callback);
void FSM_GetState_Stub(CMOCK_FSM_GetState_CALLBACK Callback);
#define FSM_GetState_StubWithCallback FSM_GetState_Stub

#ifdef __cplusplus
}
#endif

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
